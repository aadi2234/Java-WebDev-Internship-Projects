package com.mitali2.services;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.mitali.connectdb.ConnectDB;

/**
 * Servlet implementation class addcomment
 */
public class addcomment extends HttpServlet {
    private static final long serialVersionUID = 1L;

    /**
     * @see HttpServlet#HttpServlet()
     */
    public addcomment() {
        super();
        // TODO Auto-generated constructor stub
    }

    /**
     * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
     */
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        // TODO Auto-generated method stub
        response.getWriter().append("Served at: ").append(request.getContextPath());
    }

    /**
     * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
     */
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        // TODO Auto-generated method stub
        doGet(request, response);

        String addComment = request.getParameter("comment");

        Connection con = null;
        PreparedStatement ps1 = null;

        try {
            con = ConnectDB.connect();

            // Fetch srno from the database table
            ps1 = con.prepareStatement("SELECT srno FROM add_specialist_doctor");
            ResultSet rs = ps1.executeQuery();
            while (rs.next()) {
                int id = rs.getInt("srno");

                // Retrieve the existing comment for the specific srno
                ps1 = con.prepareStatement("SELECT AddComment FROM add_specialist_doctor WHERE srno=?");
                ps1.setInt(1, id);
                ResultSet commentRs = ps1.executeQuery();

                if (commentRs.next()) {
                    String existingComment = commentRs.getString("AddComment");

                    // Check if the comment is already present for the specific srno
                    if (existingComment != null && !existingComment.isEmpty()) {
                        System.out.println("Comment already exists for srno: " + id);
                    } else {
                        // Update the comment for the specific srno
                        PreparedStatement updatePs = con.prepareStatement("UPDATE add_specialist_doctor SET AddComment=? WHERE srno=?");
                        updatePs.setString(1, addComment);
                        updatePs.setInt(2, id);
                        int i = updatePs.executeUpdate();
                        if (i > 0) {
                            System.out.println("Comment added successfully for srno: " + id);
                        } else {
                            System.out.println("Failed to add comment for srno: " + id);
                        }
                        updatePs.close();
                    }
                }
                commentRs.close();
            }

        } catch (SQLException e) {
            e.printStackTrace();
            System.out.println("Failed to execute SQL query");
        } 
    }

}
